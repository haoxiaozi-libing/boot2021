# 配置数据源，给数据源起名称
spring.shardingsphere.datasource.names=m1

spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/coure_db?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=3er4#ER$

#指定course表分布情况，配置表在哪个数据库里面，表名称都是什么 tables后面是表   m1.course_1 , m1.course_2
spring.shardingsphere.sharding.tables.course.actual-data-nodes=m1.course_$->{1..2}

# 指定course表里面主键cid 生成策略  SNOWFLAKE
spring.shardingsphere.sharding.tables.course.key-generator.column=cid
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE

# 指定分片策略
spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=cid
# course_$->{cid % 2 + 1} 后面的这个值计算出来的结果会放到$位置上
spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{cid % 2 + 1}
        
# 打开sql输出日志
spring.shardingsphere.props.sql.show=true
#启动报错
spring.main.allow-bean-definition-overriding=true
































